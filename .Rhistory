View(df1)
tic
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=2000000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE)
toc
diagnostics(pima.robust)
priorCoef <- momprior(taustd=1)
#Beta-Binomial prior for model space
priorDelta <- modelbbprior(1,1)
#ybin= y>0
fit2<-modelSelection(y, x,priorCoef=priorCoef,priorDelta=priorDelta,
family="binomial")
#postProb(fit2)
for (i in 1:length(postProb(fit2)$modelid)){
if(grepl(",",postProb(fit2)$modelid[i])){
h=unlist(strsplit(postProb(fit2)$modelid[i], ","))
print("--")
for(j in 1:length(h)){
print(c(h[j],names(x)[as.numeric(h[j])]))
}
print("--")
}
else{
print(c(postProb(fit2)$modelid[i], names(x)[as.numeric(postProb(fit2)$modelid[i])]))
}
}
View(fit2)
fit2[["postProb"]][1:5]
summary(fit2$postProb)
?modelSelection
df1<-df[-c(1:2)]
tic
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=2000000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE)
toc
diagnostics(pima.robust)
fit2$margpp
fit2marg<-fit2$margpp
fit2marg
View(fit2marg)
fit2marg<-as.data.frame(fit2$margpp)
View(fit2marg)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=2000000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE)
toc()
diagnostics(pima.robust)
## Set up
rm(list=ls())
library(reshape2)
library(mombf)
library(reshape2)
library(dplyr)
library(rstudioapi)
library(BAS)
library(pracma)
library(pROC)
# library(miceadds)
# library(texreg)
setwd(dirname(getActiveDocumentContext()$path))
filepath = "../Data/input/credit_fullsample.csv"
df0 <- read.csv(filepath, header=TRUE, sep=",")
df0$date <- as.Date(df0$date)
# Window of sample data
enddate =max(df0$date)
crisisdatadate=as.Date('2017-10-01')
df1 = subset(df0, date >= as.Date(as.yearqtr(crisisdatadate)-18))
dropList <- names(which(colSums(is.na(df1))>0))
dropList <- c(dropList,"XM")
df0 <- df0[, !colnames(df0) %in% dropList] #drop countries without data before 2000
#2017-(15burn+3yrprecrisis) window
countrylist <- names(df0)
countrylist <- countrylist[-which(countrylist == "date")]
## Loop through countries
## Full sample
# df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
# df1$date<-as.Date(df1$date)
# min(as.Date((df1$date)))
# names(df1)
##Crisis data
filepath = "../Data/input/crisis_h512.csv"
df.crisis <- read.csv(filepath, header=TRUE, sep=",")
df.crisis$date <- as.Date(df.crisis$date)
name1<-Reduce(intersect,(list(countrylist,names(df.crisis)))) #32 countries
df.crisis <- df.crisis[c(name1,"date")]
## Reduced country name
## Drop Greece because of on-going crisis
#name1<-name1[-which(name1=="GR")] #31 countries
countrylist<-name1
## Hamilton Panel data gap
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel.csv')
dfh<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfh<-dfh[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfh$date<-as.Date(dfh$date)
dfh<-dfh %>%
subset(dfh$date<=enddate)
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel_r15.csv')
dfhr<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfhr<-dfhr[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfhr$date<-as.Date(dfhr$date)
dfhr15<-dfhr %>%
subset(dfhr$date<=enddate)
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel_r20.csv')
dfhr<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfhr<-dfhr[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfhr$date<-as.Date(dfhr$date)
dfhr20<-dfhr %>%
subset(dfhr$date<=enddate)
## Full sample gap
### for loop
df00 = data.frame()
for(i in 1:length(countrylist)){
country = countrylist[i]
filepath = sprintf('../Data/Processed/GeneratedCycles_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
matID <- as.matrix(rep(country, nrow(df0)))
df0= cbind(matID,df0)
names(df0)[1] <- "ID"
df<-df0
filepath = sprintf('../Data/Processed/GeneratedCycles_rolling15yrs_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
df <- merge(df,df0, by=c("date"), all=TRUE)
filepath = sprintf('../Data/Processed/GeneratedCycles_rolling20yrs_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
df <- merge(df,df0, by=c("date"), all=TRUE)
dfh0<-dfh%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
dfh0<-dfhr15%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
dfh0<-dfhr20%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
df00 <- rbind(df00,df)
}
# Merge with crisis data
df.crisis <- read.table("../data/Input/crisis_h512.csv", header=TRUE, sep=",")
df.crisis$date <- as.Date(df.crisis$date)
df.crisis <- reshape2::melt(df.crisis, id=c("date"))
names(df.crisis)<- c("date","ID","crisis")
df000<-merge(df.crisis,df00, by=c("ID","date"))
df0000<-merge(df.crisis,df00, by=c("ID","date"), all=TRUE)
## 5-12 horizon
## Variable selection
df<-df000
df<-na.omit(df000)
y=df$crisis
x=df[-c(1:3)]
dfx<- df[,-which(names(df)=="date")]
View(df)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
MCMC.iterations=100000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob="eplogprob",
method ="MCMC+BAS")
toc()
diagnostics(pima.robust)
df1<-df[-c(1:2)]
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
MCMC.iterations=100000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob="eplogprob",
method ="MCMC+BAS")
toc()
diagnostics(pima.robust)
?eplogprob
lm.obj1<-glm(crisis ~ ., data=df1, family = "binomial")
eplogprob1 <- eplogprob(lm.obj1)
eplogprob1
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
MCMC.iterations=100000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
method ="MCMC+BAS")
toc()
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
MCMC.iterations=10000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
method ="MCMC+BAS")
toc()
diagnostics(pima.robust)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=5000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1)
toc()
diagnostics(pima.robust)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
MCMC.iterations=5000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
method ="MCMC+BAS")
toc()
diagnostics(pima.robust)
summary(pima.robust)
image(pima.robust)
View(summary(pima.robust))
sum0<-cbind(as.matrix(pima.robust$namesx), as.matrix(pima.robust$probne0))
sum1<-as.data.frame(as.numeric(sum0[,2]))
rownames(sum1)<-sum0[,1]
sum1<-sum1 %>% arrange(desc(sum1))
sum1
View(sum1)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=500000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
laplace=TRUE, thin=10000)
toc()
diagnostics(pima.robust)
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=100000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
laplace=TRUE, thin=20000)
toc()
tic()
pima.robust = bas.glm(crisis ~ ., data=df1,
method="MCMC", MCMC.iterations=100000,
betaprior=robust(), family=binomial(),
modelprior=beta.binomial(1,1), force.heredity=FALSE,
bigmem=TRUE, initprob=eplogprob1,
laplace=TRUE, thin=20000)
toc()
diagnostics(pima.robust)
test_roc = roc(y ~ y, plot = FALSE, print.auc = FALSE, levels = c(1,0)
, direction = ">")
library(pROC)
test_roc = roc(y ~ y, plot = FALSE, print.auc = FALSE, levels = c(1,0)
, direction = ">")
auc(test_roc, partial.auc=c(1, 2/3), partial.auc.focus="se", partial.auc.correct=TRUE)
glm.out.F1 <- glm(paste("crisis ~", paste(paste0(names(x[1:30])), collapse="+")), data = df1, family = "binomial")
glm.out.F1$deviance
source("testcode/bic.glm.pauc.R")
library(reshape2)
library(mombf)
library(reshape2)
library(dplyr)
library(rstudioapi)
library(BAS)
library(pracma)
library(pROC)
source("testcode/bic.glm.pauc.R")
library(reshape2)
library(mombf)
library(reshape2)
library(dplyr)
library(rstudioapi)
library(BAS)
library(pracma)
library(pROC)
# library(miceadds)
# library(texreg)
setwd(dirname(getActiveDocumentContext()$path))
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
log(length(y))
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
?order.bic
?order
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = FALSE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[2:31], y, strict = FALSE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
source("testcode/bic.glm.pauc.R")
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
rm(bic.glm.pauc())
rm(summary.bic.glm.pauc())
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
order(glm.out.FT$bic)
glm.out.FT$bic
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
glm.out.FT$bic1
order(glm.out.FT$bic1)
str(glm.out.FT$bic1)
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
str(glm.out.FT$bic1)
order(glm.out.FT$bic1)
glm.out.FT$bic1
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
## Set up
rm(list=ls())
library(reshape2)
library(mombf)
library(reshape2)
library(dplyr)
library(rstudioapi)
library(BAS)
library(pracma)
library(pROC)
# library(miceadds)
# library(texreg)
setwd(dirname(getActiveDocumentContext()$path))
filepath = "../Data/input/credit_fullsample.csv"
df0 <- read.csv(filepath, header=TRUE, sep=",")
df0$date <- as.Date(df0$date)
# Window of sample data
enddate =max(df0$date)
crisisdatadate=as.Date('2017-10-01')
df1 = subset(df0, date >= as.Date(as.yearqtr(crisisdatadate)-18))
dropList <- names(which(colSums(is.na(df1))>0))
dropList <- c(dropList,"XM")
df0 <- df0[, !colnames(df0) %in% dropList] #drop countries without data before 2000
#2017-(15burn+3yrprecrisis) window
countrylist <- names(df0)
countrylist <- countrylist[-which(countrylist == "date")]
## Loop through countries
## Full sample
# df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
# df1$date<-as.Date(df1$date)
# min(as.Date((df1$date)))
# names(df1)
##Crisis data
filepath = "../Data/input/crisis_h512.csv"
df.crisis <- read.csv(filepath, header=TRUE, sep=",")
df.crisis$date <- as.Date(df.crisis$date)
name1<-Reduce(intersect,(list(countrylist,names(df.crisis)))) #32 countries
df.crisis <- df.crisis[c(name1,"date")]
## Reduced country name
## Drop Greece because of on-going crisis
#name1<-name1[-which(name1=="GR")] #31 countries
countrylist<-name1
## Hamilton Panel data gap
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel.csv')
dfh<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfh<-dfh[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfh$date<-as.Date(dfh$date)
dfh<-dfh %>%
subset(dfh$date<=enddate)
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel_r15.csv')
dfhr<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfhr<-dfhr[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfhr$date<-as.Date(dfhr$date)
dfhr15<-dfhr %>%
subset(dfhr$date<=enddate)
filepath = sprintf('../Data/Processed/GeneratedCycles_hamiltonpanel_r20.csv')
dfhr<-read.csv(filepath, header=TRUE, sep=",")
paste(countrylist, collapse="|")
dfhr<-dfhr[grepl(paste(countrylist, collapse="|"), dfh$ID),]
dfhr$date<-as.Date(dfhr$date)
dfhr20<-dfhr %>%
subset(dfhr$date<=enddate)
## Full sample gap
### for loop
df00 = data.frame()
for(i in 1:length(countrylist)){
country = countrylist[i]
filepath = sprintf('../Data/Processed/GeneratedCycles_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
matID <- as.matrix(rep(country, nrow(df0)))
df0= cbind(matID,df0)
names(df0)[1] <- "ID"
df<-df0
filepath = sprintf('../Data/Processed/GeneratedCycles_rolling15yrs_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
df <- merge(df,df0, by=c("date"), all=TRUE)
filepath = sprintf('../Data/Processed/GeneratedCycles_rolling20yrs_%s.csv',country)
df0 <- read.csv(filepath, header=TRUE, sep=",")
df <- merge(df,df0, by=c("date"), all=TRUE)
dfh0<-dfh%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
dfh0<-dfhr15%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
dfh0<-dfhr20%>%
subset(dfh$ID==country)
dfh0$date<-as.Date(dfh0$date)
df$date<-as.Date(df$date)
df <- merge(df,dfh0, by=c("ID","date"))
df00 <- rbind(df00,df)
}
# Merge with crisis data
df.crisis <- read.table("../data/Input/crisis_h512.csv", header=TRUE, sep=",")
df.crisis$date <- as.Date(df.crisis$date)
df.crisis <- reshape2::melt(df.crisis, id=c("date"))
names(df.crisis)<- c("date","ID","crisis")
df000<-merge(df.crisis,df00, by=c("ID","date"))
df0000<-merge(df.crisis,df00, by=c("ID","date"), all=TRUE)
## 5-12 horizon
## Variable selection
df<-df000
df<-na.omit(df000)
y=df$crisis
x=df[-c(1:3)]
dfx<- df[,-which(names(df)=="date")]
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT)
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT1<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT1)
rm("bic.glm.pauc")
rm("summary.bic.glm.pauc")
source("testcode/bic.glm.pauc.R")
rm(glm.out.FT)
glm.out.FT2<-bic.glm.pauc(x[1:30], y, strict = TRUE, OR=20,
glm.family="binomial", factor.type=FALSE)
summary.bic.glm.pauc(glm.out.FT2)
