df1 <- df1[names2]
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
df <- merge(df1, df2, by=c("ID","date"), all=TRUE)
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
View(df)
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
# Merge the two df by ID and date
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
View(df)
library(pglm)
model1 <- pglm(crisis ~ credit_gap, df, family = "binomial",
model = "random", method = "bfgs")
summary(model1)
?pglm
?plm
names(model1)
model1$fitted.values
model1$residuals
data("transport", package="PoEdata")
?glm
install.packages("miceadds")
library(miceadds)
mod2 <- miceadds::glm.cluster(data=df, formula=crisis ~ credit_gap,
cluster="ids", family="binomial")
mod2 <- miceadds::glm.cluster(data=df, formula=crisis ~ credit_gap,
cluster="id", family="binomial")
summary(mod2)
mod2$fitted.values
mod2$residuals
predict(mod2)
View(mod2)
mod2$glm_res$fitted.values
plot(mod2$glm_res$fitted.values, credit_gap)
plot(mod2$glm_res$fitted.values, df$credit_gap)
plot(mod2$glm_res$residuals, df$credit_gap)
plot(df$crisis, df$credit_gap)
plot(df$credit_gap, df$crisis)
lines(mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
lines(mod2$glm_res$fitted.values)
plot(df$credit_gap, mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
plot(df$credit_gap, mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
?plot
plot(x=df$credit_gap, y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
lines(mod2$glm_res$fitted.values)
lines(y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
lines(x=df$credit_gap, y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
scatter.smooth(x=df$credit_gap, y=mod2$glm_res$fitted.values)
?lines
plot(x=df$credit_gap, y=df$crisis)
lines(x=df$credit_gap, y=mod2$glm_res$fitted.values, type='p')
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
### Import data
df1 <- read.table("../Data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
rm(list=ls())
## Library
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
## Set up
startdate="2000-01-01"
enddate="2017-10-01"
## BIS credit
### Import data
df1 <- read.table("../Data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
#library(time)
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis_h4.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
names2 <- names(df2)
names2=sort(names2[-which(names2 == "date")])
write.table(names2, "../Data/processed/countrylist.txt", sep=',', row.names=FALSE)
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
# Merge the two df by ID and date
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
#df$date <- as.Date(df$date)
dfh2<- df %>%
group_by(id) %>%
#mutate(gap= dplyr::lag(credit_gap, n=2)) #%>%
na.omit()
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
#library(time)
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis_h4.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
names2 <- names(df2)
names2=sort(names2[-which(names2 == "date")])
write.table(names2, "../Data/processed/countrylist.txt", sep=',', row.names=FALSE)
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
# Merge the two df by ID and date
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
#df$date <- as.Date(df$date)
dfh2<- df %>%
group_by(id) %>%
#mutate(gap= dplyr::lag(credit_gap, n=2)) #%>%
na.omit()
df1 <- melt(df1, id=c("date"))
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
#library(time)
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis_h4.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
names2 <- names(df2)
names2=sort(names2[-which(names2 == "date")])
write.table(names2, "../Data/processed/countrylist.txt", sep=',', row.names=FALSE)
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
#library(time)
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis_h4.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
#names2 <- names(df2)
#names2=sort(names2[-which(names2 == "date")])
#write.table(names2, "../Data/processed/countrylist.txt", sep=',', row.names=FALSE)
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
# Merge the two df by ID and date
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
dfh2<- df %>%
group_by(id) %>%
#mutate(gap= dplyr::lag(credit_gap, n=2)) #%>%
na.omit()
## Stata installation
#install.packages('RStata')
library('RStata')
options("RStata.StataPath" = "\"C:\\Program Files\\Stata16\\StataMP-64\"")
options("RStata.StataVersion" = 16)
stata("help regress")
chooseStataBin()
options("RStata.StataPath")
stata_path = "\"C:\\Program Files\\Stata16\\StataMP-64\""
stata_src = "
xtset id date
rocreg crisis credit_gap, cluster(id)
estat nproc, auc
return list
matrix list r(ci_bc)
matrix list r(ci_percentile)
matrix list r(ci_normal)
matrix list r(V)
matrix list r(b)
matrix A = r(b)'
matrix B = r(V)'
matrix C = r(ci_normal)'
putexcel set myresults, replace
putexcel A1 = matrix(A)
putexcel B1 = matrix(B)
putexcel C1 = matrix(C)
rocregplot, plot1opts(msymbol(i))
graph export mygraph1.pdf, replace
"
stata(stata_src, data.in=dfh2)
x <- read.table("myresult.xlsx")
x <- read.table("myresults.xlsx")
library(readxl)
x <- read_excel("myresults.xlsx")
x <- as.numeric(x)
x <- read_excel("myresults.xlsx")
x
install.packages("xlsx")
x<-read.xlsx("myresults.xlsx", header=FALSE)
library(xlsx)
x<-read.xlsx("myresults.xlsx", header=FALSE)
library(xlsx)
?read_excel
x <- read_xlsx("myresults.xlsx")
View(x)
x <- read_xlsx("myresults.xlsx", header=FALSE)
x <- read_xlsx("myresults.xlsx", col_names=FALSE)
x
x[1]
tabresults = matrix(NA, 4, 12)
tabresults[,1]=t(x)
View(tabresults)
rm(list=ls())
## Library
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
library(readxl)
## Set up
startdate="2000-01-01"
enddate="2017-10-01"
## Stata command
stata_src = "
xtset id date
rocreg crisis credit_gap, cluster(id)
estat nproc, auc
matrix A = r(b)'
matrix B = r(V)'
matrix C = r(ci_bc)'
putexcel set myresults, replace
putexcel A1 = matrix(A)
putexcel B1 = matrix(B)
putexcel C1 = matrix(C)
"
## BIS credit
### Import data
#### Credit gap data
df1 <- read.table("../Data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
tabresults1 = matrix(NA, 4, 12)
tabresults2 = matrix(NA, 4, 12)
for (h in 1:12){
# Import crisis data
filepath = sprintf("../data/Input/crisis_h%s.csv", h)
df2 <- read.table(filepath, header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
df2 = subset(df2, date>= as.Date(startdate) & date<=as.Date(enddate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
#Merge Data
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
#Call Stata regression
stata(stata_src, data.in=df)
x <- read_xlsx("myresults.xlsx", col_names=FALSE)
tabresults1[,h]=t(x)
}
View(tabresults1)
# Decomposition Codes
## 1. Load library ----
rm(list=ls())
library('rstudioapi')
setwd(dirname(getActiveDocumentContext()$path))
getwd()
filepath = "../Data/Processed/countrylist.txt"
countrylist <- read.table(filepath, header=TRUE, sep=",")
countrylist = countrylist[-1,]
startdate="2000-01-01"
#datef = seq(as.Date("2000-01-01"), by="quarter", length.out=nrow(c.df))
#c.df$date = datef
#c.df$date <- as.Date(c.df$date)
country='AR'
df0 = read.table(sprintf("../Data/Processed/GeneratedCycles_%s.csv",country), header=TRUE, sep=",")
df0<-df0[c("combined.cycle","date")]
df0$date <- as.Date(df0$date)
df0<-na.omit(df0)
df0 = subset(df0, date >= as.Date(startdate))
names(df0) <- c(country,"date")
for(i in 1:length(countrylist)){
country = countrylist[i]
df1 = read.table(sprintf("../Data/Processed/GeneratedCycles_%s.csv",country), header=TRUE, sep=",")
df1<-df1[c("combined.cycle","date")]
df1$date <- as.Date(df1$date)
df1<-na.omit(df1)
df1 = subset(df1, date >= as.Date(startdate))
names(df1) <- c(country,"date")
df0 <- merge(df0, df1, by=c("date"), all=TRUE)
}
write.table(df0, "../Data/input/credit_gap_combined.csv", sep=',', row.names=FALSE)
rm(list=ls())
## Library
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
library(readxl)
## Set up
startdate="2000-01-01"
enddate="2017-10-01"
## Stata command
stata_src = "
xtset id date
rocreg crisis credit_gap, cluster(id)
estat nproc, auc
matrix A = r(b)'
matrix B = r(V)'
matrix C = r(ci_bc)'
putexcel set myresults, replace
putexcel A1 = matrix(A)
putexcel B1 = matrix(B)
putexcel C1 = matrix(C)
"
## BIS credit
### Import data
#### Credit gap data
df1 <- read.table("../Data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
tabresults1 = matrix(NA, 4, 12)
tabresults2 = matrix(NA, 4, 12)
df1 <- read.table("../Data/Input/credit_gap_combined.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
for (h in 1:12){
# Import crisis data
filepath = sprintf("../data/Input/crisis_h%s.csv", h)
df2 <- read.table(filepath, header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
df2 = subset(df2, date>= as.Date(startdate) & date<=as.Date(enddate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
#Merge Data
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
#Call Stata regression
stata(stata_src, data.in=df)
x <- read_xlsx("myresults.xlsx", col_names=FALSE)
tabresults2[,h]=t(x)
h
}
df1 <- read.table("../Data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
names(df1)
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
for (h in 1:12){
# Import crisis data
filepath = sprintf("../data/Input/crisis_h%s.csv", h)
df2 <- read.table(filepath, header=TRUE, sep=",")
df2$date <- as.Date(df2$date)
df2 = subset(df2, date>= as.Date(startdate) & date<=as.Date(enddate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
#Merge Data
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
#Call Stata regression
stata(stata_src, data.in=df)
x <- read_xlsx("myresults.xlsx", col_names=FALSE)
tabresults1[,h]=t(x)
print(h)
}
View(tabresults2)
tabresults = rbind(tabresults1, tabresults2)
View(tabresults)
write.table(tabresult1, "../Data/Output/results_2000_BIS.csv", sep=',', row.names=FALSE)
write.table(tabresults1, "../Data/Output/results_2000_BIS.csv", sep=',', row.names=FALSE)
