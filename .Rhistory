name1<- str_sub(names(df2[-ncol(df2)]), end=2)
name2<- str_sub(names(df2[-ncol(df2)]), start=4)
names(df2) <- c(name1,"date")
colnames(df2)[which(names(df2)=="GB")] <- "UK"
## Gap data
df3 <- df3[,c(clist2)] # 33 countries
names(df3) <- c(name1,"date")
colnames(df3)[which(names(df3)=="GB")] <- "UK"
name1 <- names(df2)
names(df3)
# Collect Data
## Set up
rm(list=ls())
#1. Parameter Setup
#https://www.bis.org/statistics/full_data_sets.htm
#----
# Libraries
library(dplyr)
library(ggplot2)
library(zoo)
#library(reshape2)
library(rstudioapi)
library(data.table)
library(xts)
library(tsbox)
library(rio)
# create a temporary directory
td <- tempdir()
# create a temporary file
tf <- tempfile(tmpdir=td, fileext=".zip")
# download file from internet into temporary location
download.file("https://www.bis.org/statistics/full_credit_gap_csv.zip", tf)
# list zip archive
file_names <- unzip(tf, list=TRUE)
# extract files from zip file
unzip(tf, exdir=td, overwrite=TRUE)
# use when zip file has only one file
data <- import(file.path(td, file_names$Name[1]))
# use when zip file has multiple files
#data_multiple <- lapply(file_names$Name, function(x) import(file.path(td, x)))
# delete the files and directories
rm(td)
rm(tf)
setwd(dirname(getActiveDocumentContext()$path))
latest_date = file_names$Date[1]
### filter reference: https://dplyr.tidyverse.org/reference/filter.html\
#filter(  optionA,
#         optionB,
#         optionC %in% c("a","b"))
#             is also available
## Process data
rates_plot2 <- data %>%
filter(.data[["Credit gap data type"]] == "A:Credit-to-GDP ratios (actual data)")
#filter(grepl(clist2, BORROWERS_CTY))%>%
rates_plot3 <- data %>%
filter(.data[["Credit gap data type"]] == "C:Credit-to-GDP gaps (actual-trend)")
#filter(grepl(clist2, BORROWERS_CTY))%>%
t_rates_plot2 <- transpose(rates_plot2)
# get row and colnames in order
colnames(t_rates_plot2) <- rownames(rates_plot2)
rownames(t_rates_plot2) <- colnames(rates_plot2)
colnames(t_rates_plot2) <- t_rates_plot2[2,] # changes col names to country id
#t_rates_plot2 <- t_rates_plot2[-c(1:2,4:11),]
t_rates_plot2 <- t_rates_plot2[-c(1:7),]
t_rates_plot2$date <- rownames(t_rates_plot2)
dim(t_rates_plot2)
#t_rates_plot2 <- na.omit(t_rates_plot2)
dim(t_rates_plot2)
## Gap data
# get row and colnames in order
t_rates_plot3 <- transpose(rates_plot3)
colnames(t_rates_plot3) <- rownames(rates_plot3)
rownames(t_rates_plot3) <- colnames(rates_plot3)
colnames(t_rates_plot3) <- t_rates_plot3[2,] # changes col names to country id
#t_rates_plot3 <- t_rates_plot3[-c(1:2,4:11),]
t_rates_plot3 <- t_rates_plot3[-c(1:7),]
t_rates_plot3$date <- rownames(t_rates_plot3)
df3 <- t_rates_plot3
df3$date <- as.Date(as.yearqtr(df3$date,           # Convert dates to quarterly
format = "%Y-Q%q"))
### data type transforming
df <- t_rates_plot2
df$date <- as.Date(as.yearqtr(df$date,           # Convert dates to quarterly
format = "%Y-Q%q"))
#df <- xts(df, order.by=df$date)
#df <- ts_ts(df)
## Filter out countries with data available from 1970:Q1
df1 = subset(df, date >= as.Date('1970-01-01'))
clist1 <- names(which(colSums(is.na(df1))>0))
df1 <- select(df1,-clist1) # 21 countries remains
clist1 <- colnames(df1)
df1 <- df[,clist1]
name11<- str_sub(names(df1[-ncol(df1)]), end=2)
name21<- str_sub(names(df1[-ncol(df1)]), start=4)
name11<- c(name11,"date")
## Remove south-africa from calculation since no crisis data is available from
## Filter out countries from 1985:Q1 onward (none deleted)
df2 = subset(df, date >= as.Date('1985-01-01'))
clist2 <- names(which(colSums(is.na(df2))>0))
df2 <- select(df2,-clist2)
clist2 <- colnames(df2)
df2 <- df[,clist2] # 33 countries
names(df2)
name1<- str_sub(names(df2[-ncol(df2)]), end=2)
name2<- str_sub(names(df2[-ncol(df2)]), start=4)
names(df2) <- c(name1,"date")
colnames(df2)[which(names(df2)=="GB")] <- "UK"
## Gap data
df3 <- df3[,c(clist2)] # 33 countries
names(df3) <- c(name1,"date")
colnames(df3)[which(names(df3)=="GB")] <- "UK"
name1 <- names(df2)
names(df3)
## Output data into data folder
## Crisis data
#Import European data #2021:DEC (quarter level data)
# https://www.esrb.europa.eu/pub/financial-crises/html/index.en.html
# https://www.esrb.europa.eu/pub/fcdb/esrb.fcdb20220120.en.xlsx
rm(td)
rm(tf)
# create a temporary directory
td <- tempdir()
# create a temporary file
tf <- tempfile(tmpdir=td, fileext=".xlsx")
# download file from internet into temporary location
download.file("https://www.esrb.europa.eu/pub/fcdb/esrb.fcdb20220120.en.xlsx", tf)
# list zip archive
#file_names <- unzip(tf, list=TRUE)
# extract files from zip file
#unzip(tf, exdir=td, overwrite=TRUE)
# use when zip file has only one file
data <- import(tf)
data <- data[-c(1, (nrow(data)-3):nrow(data)),-c(5:ncol(data))]
names(data)[3]<-"Start_date"
names(data)[4]<-"End_date"
data$Start_date <- as.Date(as.yearmon(data$Start_date,           # Convert dates to monthly
format = "%Y-%m"))
data$End_date <- as.Date(as.yearmon(data$End_date,           # Convert dates to monthly
format = "%Y-%m"))
lubridate::quarter(data$Start_date) -> data$Start_quarter
lubridate::year(data$Start_date) -> data$Start_year
data$startdate <- paste(data$Start_year, data$Start_quarter, sep="-Q")
data$startdate <- as.Date(as.yearqtr(data$startdate,           # Convert dates to quarterly
format = "%Y-Q%q"))
lubridate::quarter(data$End_date) -> data$End_quarter
lubridate::year(data$End_date) -> data$End_year
data$enddate <- paste(data$End_year, data$End_quarter, sep="-Q")
data$enddate <- as.Date(as.yearqtr(data$enddate,           # Convert dates to quarterly
format = "%Y-Q%q"))
data <- data[c("Country","Event","startdate","enddate")]
# data1 <- data %>%
#     filter(Event == 1)
#
# data2 <- data %>%
#   filter(Event == 2)
#
# data3 <- data %>%
#   filter(Event == 3)
a<-table(data$Country)
a <- as.data.frame(a)[,1]
a <- as.character(a)
## Create a data frame of time series
### Assign 1st row to be country names
### Length of data -> 1985:Q1->2017:Q4 132 qtrs (33 yrs) x 28 countries
m <- as.data.frame(matrix(0, ncol=28, nrow =132))
names(m) <- a
V <- seq(as.Date("1985-01-01"), as.Date("2017-12-31"), by="quarters")
m$date <- V
m$date <- as.Date(m$date)
## For loop to loop through all countries
### 1st event
for (i in 1:nrow(data)){
ai = data$Country[i]
for (j in 1:132){
if(m[["date"]][j] >= data[["startdate"]][i] && m[["date"]][j] <= data[["enddate"]][i]) {m[[ai]][j]=1}
}
}
m1 <- m
name3 <- names(m)
name3 <- c(Reduce(intersect, list(name1,name3))) ## 15 countries + UK
m1<-m1[name3]
#
# ### 2nd event
# a<-table(data2$Country)
# a <- as.data.frame(a)[,1]
# a <- as.character(a)
#
# rownames(data2) = data2$Country
#
# for (i in 1:length(a)){
#   ai = a[i]
#   for (j in 1:132){
#     if(m[["date"]][j] >= data2[["startdate"]][i] && m[["date"]][j] <= data2[["enddate"]][i]) {m[[ai]][j]=1}
#   }
# }
#
# ### 3rd event
# a<-table(data3$Country)
# a <- as.data.frame(a)[,1]
# a <- as.character(a)
#
# rownames(data3) = data3$Country
#
# for (i in 1:length(a)){
#   ai = a[i]
#   for (j in 1:132){
#     if(m[["date"]][j] >= data3[["startdate"]][i] && m[["date"]][j] <= data3[["enddate"]][i]) {m[[ai]][j]=1}
#   }
# }
# use when zip file has multiple files
#data_multiple <- lapply(file_names$Name, function(x) import(file.path(td, x)))
# delete the files and directories
rm(td)
rm(tf)
#Import IMF data #2017:Q4 (annual crisis)
#https://www.imf.org/en/Publications/WP/Issues/2018/09/14/Systemic-Banking-Crises-Revisited-46232
# https://www.imf.org/-/media/Files/Publications/WP/2018/datasets/wp18206.ashx
library(readxl)
tf <- "../Data/Input/SYSTEMIC BANKING CRISES DATABASE_2018.xlsx"
data <-read_excel(tf, sheet="Crisis Resolution and Outcomes")
## Combine crisis data
### with priority data overwrite given to European , more minutes data available to quarter level
library(stringr)
data[grepl('/', data$Country), ]$Country <- str_sub(data[grepl('/', data$Country), ]$Country, end=-4)
data[grepl('/', data$End), ]$End <- str_sub(data[grepl('/', data$End), ]$End, end=-4)
data = data[-nrow(data), -c(4:11)]
a<-as.character(as.data.frame(table(data$Country))[,1])
data$Start <- paste(data$Start, "-Q1", sep='')
data$End <- paste(data$End, "-Q4", sep='')
data$Start <- as.Date(as.yearqtr(data$Start,           # Convert dates to quarterly
format = "%Y-Q%q"))
data$End <- as.Date(as.yearqtr(data$End,           # Convert dates to quarterly
format = "%Y-Q%q"))
data <- na.omit(data)
m <- as.data.frame(matrix(0, ncol=118, nrow =132))
names(m) <- a
V <- seq(as.Date("1985-01-01"), as.Date("2017-12-31"), by="quarters")
m$date <- V
m$date <- as.Date(m$date)
for (i in 1:nrow(data)){
ai = data$Country[i]
for (j in 1:132){
if(m[["date"]][j] >= data[["Start"]][i] && m[["date"]][j] <= data[["End"]][i]) {m[[ai]][j]=1}
}
}
name4 <- names(m)
Reduce(intersect, list(name2,name4)) #27 - AT, BE, DE, DK , ES, FI, FR, UK, GR, HU, IE, IT, NL, NO, PT, SE (= 11 SW switzerland included in second data)
name5 <- c("Argentina","Switzerland","Chile","Indonesia","India","Japan","Korea","Mexico","Malaysia","Thailand","United States")
name6 <- c("AR","CH","CL","ID","IN","JP","KR","MX","MY","TH","US")
name5 <- c(name5,"date")
name6 <- c(name6,"date")
## Combined and separate file for each countries
### Combine data for 70 onward
### 1985 onward
m <- m[name5]
m2 <- m
names(m2) <- name6
m <- merge(m1, m2, by="date")
m <- c(m, rep(0,nrow(m),3))
names(m)[(length(m)-2):length(m)] <- c("AU","ZA","CA")
### Export data
df2 <- subset(df2,select=-GR)
df3 <- subset(df3,select=-GR)
m <- as.data.frame(m)
m <- subset(m,select=-GR)
write.table(df2, "../Data/input/credit.csv", sep=',', row.names=FALSE)
write.table(df3, "../Data/input/credit_gap.csv", sep=',', row.names=FALSE)
write.table(m, "../Data/input/crisis.csv", sep=',', row.names=FALSE)
## Will have to remove Greece because of ongoing crisis -> 28 countries in final sample
## 20 countries in beginning sample 1970:Q1 forward for credit data
#-> generate credit cycle component from 1985:Q1 onward
#-> generate credit cycle from 2000:Q1 onward
## Next step
### panel logistic regression
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 <- df1[names2]
View(df1)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date >= as.Date(startdate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
View(df1)
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date >= as.Date(startdate))
df1 <- df1[names2]
View(df1)
View(df2)
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date >= as.Date(startdate) && date <=as.Date(enddate))
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date >= as.Date(startdate) || date <=as.Date(enddate))
df1 <- df1[names2]
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="1985-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
df <- merge(df1, df2, by=c("ID","date"), all=TRUE)
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
View(df)
## Set up
rm(list=ls())
#library(DataCombine)
library(reshape2)
library(dplyr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
startdate="2000-01-01"
enddate="2017-10-01"
#Merge Data
df1 <- read.table("../data/Input/credit_gap.csv", header=TRUE, sep=",")
df1$date<-as.Date(df1$date)
min(as.Date((df1$date)))
names(df1)
df2 <- read.table("../data/Input/crisis.csv", header=TRUE, sep=",")
# df3 <- read.table("HHCredit_GDP_gap.txt", header=TRUE, sep=",")
# df4 <- read.table("NFECredit_GDP_gap.txt", header=TRUE, sep=",")
# df5 <- read.table("GDP_gap.txt", header=TRUE, sep=",")
# df6 <- read.table("HP_inc_gap.txt", header=TRUE, sep=",")
names2 <- names(df2)
names2
## Limit df1 year and countries here
Reduce(intersect, list(names(df1),names(df2)))
df1 = subset(df1, date>= as.Date(startdate) & date<=as.Date(enddate))
df1 <- df1[names2]
df1 <- melt(df1, id=c("date"))
names(df1)<- c("date","id","credit_gap")
## Limit df2 year and countries here
df2 = subset(df2, date >= as.Date(startdate))
df2 <- melt(df2, id=c("date"))
names(df2)<- c("date","id","crisis")
# Merge the two df by ID and date
df <- merge(df1, df2, by=c("id","date"), all=TRUE)
View(df)
library(pglm)
model1 <- pglm(crisis ~ credit_gap, df, family = "binomial",
model = "random", method = "bfgs")
summary(model1)
?pglm
?plm
names(model1)
model1$fitted.values
model1$residuals
data("transport", package="PoEdata")
?glm
install.packages("miceadds")
library(miceadds)
mod2 <- miceadds::glm.cluster(data=df, formula=crisis ~ credit_gap,
cluster="ids", family="binomial")
mod2 <- miceadds::glm.cluster(data=df, formula=crisis ~ credit_gap,
cluster="id", family="binomial")
summary(mod2)
mod2$fitted.values
mod2$residuals
predict(mod2)
View(mod2)
mod2$glm_res$fitted.values
plot(mod2$glm_res$fitted.values, credit_gap)
plot(mod2$glm_res$fitted.values, df$credit_gap)
plot(mod2$glm_res$residuals, df$credit_gap)
plot(df$crisis, df$credit_gap)
plot(df$credit_gap, df$crisis)
lines(mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
lines(mod2$glm_res$fitted.values)
plot(df$credit_gap, mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
plot(df$credit_gap, mod2$glm_res$fitted.values)
plot(df$credit_gap, df$crisis)
?plot
plot(x=df$credit_gap, y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
lines(mod2$glm_res$fitted.values)
lines(y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
lines(x=df$credit_gap, y=mod2$glm_res$fitted.values)
plot(x=df$credit_gap, y=df$crisis)
scatter.smooth(x=df$credit_gap, y=mod2$glm_res$fitted.values)
?lines
plot(x=df$credit_gap, y=df$crisis)
lines(x=df$credit_gap, y=mod2$glm_res$fitted.values, type='p')
