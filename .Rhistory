size=8*0.36, max.overlaps = 10)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 29)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 15)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 12)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 13)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 14)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
library(ggrepel)
df2<-df1 %>%
subset(date==max(df1$date))
p1<-
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 15)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_stack.pdf", width=8, height=5)
p2<-ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "identity",
size=8*0.36, max.overlaps = 15)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_series.pdf", width=8, height=5)
ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(x=date, y=Cycleweight,label = variable), position = "identity",
size=8*0.36, max.overlaps = 15)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(x=date, y=Cycleweight,label = variable), position = "identity",
size=8*0.36, max.overlaps = 20)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(x=date, y=Cycleweight,label = variable), position = "identity",
size=8*0.36, max.overlaps = 29)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
p1<-ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 15)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_stack.pdf", width=8, height=5)
p2<-ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(x=date, y=Cycleweight,label = variable), position = "identity",
size=8*0.36, max.overlaps = 29)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_series.pdf", width=8, height=5)
library(patchwork)
(p1)/(p2)
ggsave("../Data/Output/Graphs/Weights_combined.pdf" , width=8, height=10)
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "identity",
size=8*0.36, max.overlaps = 15)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "identity",
size=8*0.36, max.overlaps = 29)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 29)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
p1<-ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 20)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 20)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
library(ggrepel)
df2<-df1 %>%
subset(date==max(df1$date))
p1<-ggplot(data=df1, aes(x=date, y=Cycleweight, group=variable)) +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_area(aes(fill = variable)) +
geom_text_repel(data=df2,aes(label = variable), position = "fill",
size=8*0.36, max.overlaps = 20)+
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position = "bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_stack.pdf", width=8, height=5)
p2<-ggplot() +
#geom_rect(data = rects, aes(ymin = -Inf, ymax = Inf, xmin = ystart, xmax = yend, fill=periods), alpha = 0.3) +
#scale_fill_manual(values=fillss)+
geom_line(data=df1, aes(x=date, y=Cycleweight, color=variable)) +
geom_text_repel(data=df2,aes(x=date, y=Cycleweight,label = variable), position = "identity",
size=8*0.36, max.overlaps = 29)+
#geom_text(aes(label = variable), position = "fill")
#coord_cartesian(ylim = c(min(df1$value), max(df1$value))) +
theme_light() +
theme(panel.grid = element_blank()) +
# geom_hline(aes(yintercept= 3.06, linetype = "BIS gap = 3.06"), colour= 'lightsalmon') +
# geom_hline(aes(yintercept= 2.92, linetype = "weighted gap  = 2.92"), colour= 'mediumturquoise') +
# scale_linetype_manual(name = "threshold", values = c(2,2),
#                       guide = guide_legend(override.aes = list(color = c("lightsalmon","mediumturquoise"))))+
#geom_hline(aes(yintercept= 3, linetype = "optimized threshold  = 3.00"), colour= 'blue') +
#scale_linetype_manual(name = "threshold", values = c(2),
#                      guide = guide_legend(override.aes = list(color = c("blue"))))+
#
theme(legend.position="bottom") +
labs(x = NULL, y = NULL,
title = sprintf("Credit gaps weights"))
ggsave("../Data/Output/Graphs/Weights_series.pdf", width=8, height=5)
library(patchwork)
(p1)/(p2)
ggsave("../Data/Output/Graphs/Weights_combined.pdf" , width=8, height=10)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
bookdown::render_book('index.Rmd', "bookdown::pdf_document2", new_session = T)
